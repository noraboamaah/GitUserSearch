{"ast":null,"code":"var _jsxFileName = \"/Users/nora/Desktop/Documents/mpharma/free/GitUserSearch/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nconst testData = [{\n  id: \"33434343\",\n  name: \"Dan Abramov\",\n  avatar_url: \"https://avatars0.githubusercontent.com/u/810438?v=4\",\n  company: \"@facebook\"\n}, {\n  name: \"Sophie Alpert\",\n  avatar_url: \"https://avatars2.githubusercontent.com/u/6820?v=4\",\n  company: \"Humu\"\n}, {\n  name: \"Sebastian Markbåge\",\n  avatar_url: \"https://avatars2.githubusercontent.com/u/63648?v=4\",\n  company: \"Facebook\"\n}];\n\nconst CardList = props => {\n  return React.createElement(\"div\", {\n    className: \"gridView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.profiles.map(profile => React.createElement(Card, Object.assign({\n    key: profile.id\n  }, profile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const url = await fetch(\"https://api.github.com/users/\".concat(this.state.userName));\n      const resp = await url.json();\n      this.props.onSubmit(resp);\n      this.setState({\n        userName: \"\"\n      });\n    };\n\n    this.state = {\n      userName: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Enter your GitHub user name\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"search\",\n      value: this.state.userName,\n      onChange: event => this.setState({\n        userName: event.target.value\n      }),\n      type: \"text\",\n      placeholder: \"github name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"add name\")));\n  }\n\n}\n\nclass Card extends React.Component {\n  render() {\n    const profile = this.props;\n    return React.createElement(\"div\", {\n      className: \"github-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: profile.avatar_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" \", profile.name), React.createElement(\"div\", {\n      className: \"company\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, profile.company)));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: testData\n    };\n\n    this.addNewProfile = profileData => {\n      console.log(\"profileData\", profileData);\n      this.setState(prevState => ({\n        profiles: [profileData, ...prevState.profiles]\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.addNewProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      profiles: this.state.profiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nora/Desktop/Documents/mpharma/free/GitUserSearch/src/App.js"],"names":["React","testData","id","name","avatar_url","company","CardList","props","profiles","map","profile","Form","Component","constructor","handleSubmit","e","preventDefault","url","fetch","state","userName","resp","json","onSubmit","setState","bind","render","fontWeight","event","target","value","Card","App","addNewProfile","profileData","console","log","prevState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst testData = [\n  {\n    id: \"33434343\",\n    name: \"Dan Abramov\",\n    avatar_url: \"https://avatars0.githubusercontent.com/u/810438?v=4\",\n    company: \"@facebook\"\n  },\n  {\n    name: \"Sophie Alpert\",\n    avatar_url: \"https://avatars2.githubusercontent.com/u/6820?v=4\",\n    company: \"Humu\"\n  },\n  {\n    name: \"Sebastian Markbåge\",\n    avatar_url: \"https://avatars2.githubusercontent.com/u/63648?v=4\",\n    company: \"Facebook\"\n  }\n];\n\nconst CardList = (props) => {\n  return (\n    <div className='gridView'>\n      {props.profiles.map((profile) => (\n        <Card key={profile.id} {...profile} />\n      ))}\n    </div>\n  );\n};\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      userName: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = await fetch(\n      `https://api.github.com/users/${this.state.userName}`\n    );\n\n    const resp = await url.json();\n    this.props.onSubmit(resp);\n    this.setState({ userName: \"\" });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div style={{ fontWeight: \"bold\" }}>Enter your GitHub user name</div>\n        <div>\n          <input\n            className='search'\n            value={this.state.userName}\n            onChange={(event) =>\n              this.setState({ userName: event.target.value })\n            }\n            type='text'\n            placeholder='github name'\n            required\n          />\n          <button className='form-button'>add name</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nclass Card extends React.Component {\n  render() {\n    const profile = this.props;\n    return (\n      <div className='github-profile'>\n        <img src={profile.avatar_url} />\n        <div className='info'>\n          <div className='name'> {profile.name}</div>\n          <div className='company'>{profile.company}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: testData\n  };\n\n  addNewProfile = (profileData) => {\n    console.log(\"profileData\", profileData);\n    this.setState((prevState) => ({\n      profiles: [profileData, ...prevState.profiles]\n    }));\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}